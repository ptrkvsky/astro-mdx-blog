---
import BaseLayout from "@layouts/BaseLayout.astro";
import type {Frontmatter} from "@interfaces/Frontmatter";
import styles from "@features/blog/style/post.module.css"
import TableOfContent from "@features/blog/components/TableOfContent"
import getSchemaBlogPosting from "src/helpers/getSchemaBlogPosting";
import type { AstroComponentFactory } from "astro/dist/types/runtime/server";
import type { MarkdownHeading } from "astro";
import ObserverTableOfContent from "@features/blog/scripts/ObserverTableOfContent.astro";
import Header from "@components/Header.astro";
import Breadcrumb, { BreadcrumbItem } from "@components/Breadcrumb.astro";

interface AstroProps {
  MdxContent: AstroComponentFactory
  frontmatter: Frontmatter
  getHeadings: () => Promise<MarkdownHeading[]>
}

export async function getStaticPaths() {
  return Promise.all((await Astro.glob('../../../content/*.mdx'))
    // .filter((page) => !page.frontmatter.draft) // skip drafts
    .map(async ({ default: MdxContent, frontmatter,getHeadings   }) => {
        return {
          params: { slug: frontmatter.slug || "index" },
          props: { 
            MdxContent,
            getHeadings,
            frontmatter:  frontmatter,
          }
        }
     })
  ) 
}
const { MdxContent, frontmatter, getHeadings } = Astro.props as AstroProps;
const schema = getSchemaBlogPosting(frontmatter)
const headings = await getHeadings()
const breadcrumbItems: BreadcrumbItem[] = [
  {
    name: "Accueil",
    path: "/"
  },
  {
    name: "Articles",
    path: "/posts"
  },
  {
    name: frontmatter.title,
    path: "/blog"
  }
]


---

<BaseLayout title={frontmatter.title} schema={schema} description={frontmatter.description} >
  <ObserverTableOfContent />
  <Header>
    <Breadcrumb breadcrumbItems={breadcrumbItems} />
    <h1 class="pb-8 font-bold">{frontmatter.title}</h1>
  </Header>
  <div class={styles.post}>
    <div class={`${styles["wrapper-post"]}`}>
      <aside class={`${styles["wrapper-table-of-content"]}  px-4 lg:px-0`}>
        <TableOfContent client:load headings={headings} />
      </aside>
      <article class={`${styles["post-content"]} max-w-2xl bg-white relative z-10 px-4 lg:px-0`}>
        <p class={`${styles.time}`}>Temps de lecture <span class={`${styles.highlight} font-semibold`}>{frontmatter.minutesRead} minutes</span></p>
        <MdxContent />
      </article>
    </div>
  </div>
</BaseLayout>

