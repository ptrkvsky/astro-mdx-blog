---
import { toHTML } from '@portabletext/to-html';
import type { SanityAllPost } from '@features/blog/interfaces/SanityAllPost';
import type { Post } from '@interfaces/index';
import BaseLayout from '@layouts/BaseLayout.astro';
import { TableOfContent } from '@features/blog/components/TableOfContent/';
import ObserverTableOfContent from '@features/blog/scripts/ObserverTableOfContent.astro';
import Header from '@features/layout/Header/Header.astro';
import Breadcrumb from '@components/Breadcrumb';
import fetchSanity from '@helpers/fetchSanity';
import { queryAllPosts } from '@features/blog/queries/queryAllPosts';
import { getPostsUrlParams } from '@features/blog/functions/getPostsUrlParams';
import { getHeadings } from '@features/blog/functions/getHeadings';
import { portableTextComponents } from '@helpers/portableTextComponents';
import { getGraphBlogPost } from '@helpers/getGraphBlogPost';
import { getBreadcrumbItems } from '@features/blog/functions';
import FormComment from '@features/blog/components/FormComment/FormComment';
import getPostComments from '@features/blog/functions/getPostsComments';
import SectionComments from '@features/blog/components/SectionComments.astro';
import Faq from '@features/blog/components/Faq.astro';

interface AstroProps {
  post: Post;
  params: {
    slug: {
      current: string;
    };
  };
}

export async function getStaticPaths() {
  const sanityProjects = await fetchSanity<SanityAllPost>(queryAllPosts);
  const params = sanityProjects && getPostsUrlParams(sanityProjects);

  return params;
}

const { post } = Astro.props as AstroProps;
if (!post) return;
const comments = await getPostComments(post._id);
const graphPost = getGraphBlogPost(post);
const postContent = toHTML(post.bodyRaw, {
  components: portableTextComponents,
});

const headings = getHeadings(post.bodyRaw || []);
const breadcrumbItems = getBreadcrumbItems(post);
---

<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/styles/default.min.css"
/>

<BaseLayout
  title={post?.seoTitle || ''}
  schema={graphPost}
  description={post?.seoDescription || ''}
  image={post.seoImage?.asset?.url}
  canonical={`/posts/${post.slug.current}`}
>
  <div slot="main" class="post">
    <ObserverTableOfContent />
    <Header slot="before-main">
      <!-- <Breadcrumb client:only="react" breadcrumbItems={breadcrumbItems} /> -->
    </Header>

    <div class="wrapper-post">
      {
        headings.length > 0 && (
          <aside class="wrapper-table-of-content px-4 lg:px-0 bg-white">
            <TableOfContent headings={headings} />
          </aside>
        )
      }
      <div>
        <h1 class="pb-8 font-bold conteneur">{post.title}</h1>

        <article class="post-content" set:html={postContent} />
        {
          post.questionsAnswers && (
            <Faq questionsAnswers={post.questionsAnswers} />
          )
        }
        <FormComment client:visible postId={post._id} postTitle={post.title} />
        <SectionComments postTitle={post.title} comments={comments} />
      </div>
    </div>
  </div>
</BaseLayout>

<style is:global>
  h1 {
    @apply mb-3 text-2xl lg:text-4xl;
  }

  .post-content {
    @apply pb-8;
  }
  .post-content ul {
    @apply list-disc ml-6;
  }
  .post-content ul li {
    @apply m-0;
  }
  .post-content a {
    @apply text-pink-600;
  }

  .post-content img {
    aspect-ratio: attr(data-width) / attr(data-height);
  }

  .post-content iframe {
    @apply mb-4;
    max-width: calc(100vw - 2rem);
  }

  .post-content h1,
  .post-content h2,
  .post-content h3,
  .post-content h4,
  .post-content h5,
  .post-content h6 {
    @apply font-semibold text-indigo-600;
  }

  .post-content h2,
  .post-content h3,
  .post-content h4,
  .post-content h5,
  .post-content h6 {
    @apply font-semibold text-indigo-600 mt-10 mb-6 text-2xl lg:text-3xl;
  }

  .post-content p,
  .post-content ul,
  .post-content li,
  .post-content strong {
    @apply my-6 text-base;
  }

  .post-content blockquote {
    @apply relative italic my-7 w-full px-12 py-4 bg-purple-50 border-l-4 border-gray-300;
  }

  .post-content blockquote p {
    @apply m-0;
  }

  .post-content blockquote:before {
    content: 'â€œ';
    position: absolute;
    left: -8px;
    top: 4px;
    font-family: 'Times New Roman', serif;
    font-size: 6em;
    line-height: 1;
    font-weight: bold;
    opacity: 0.25;
  }

  .post-content pre {
    @apply mb-3 px-6 py-4 bg-gray-200 border-l-4 border-gray-300 w-full overflow-auto;
    max-width: calc(100vw - 2.8rem);
  }
  .wrapper-post {
    @apply relative lg:justify-between max-w-6xl mx-auto lg:flex sm:py-32;
  }
  .post-content {
    @apply max-w-2xl relative z-10 px-4 lg:px-0;
    background-color: #fff;
  }
  .post-content strong {
    @apply text-pink-500;
  }
  .post-content .time {
    @apply mt-0 pt-4 mb-4 lg:mb-5 text-sm text-gray-800;
  }
  .post-content .time .highlight {
    @apply text-pink-500;
  }

  .wrapper-table-of-content {
    @apply lg:max-w-xs max-h-screen relative lg:sticky order-last top-0;
  }

  .toc ul {
    max-height: calc(100vh - 45px);
    overflow: auto;
  }
  .toc ul::-webkit-scrollbar {
    width: 5px;
  }

  li.active {
    @apply border-pink-500;
  }
  li.active:hover {
    @apply border-pink-600;
  }
  li.active:hover a {
    @apply text-pink-600;
  }
  li.active a {
    @apply text-pink-500 font-bold;
  }

  .secondary-title {
    @apply text-4xl mb-4;
  }
</style>
